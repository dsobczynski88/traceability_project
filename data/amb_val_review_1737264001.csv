,requirements,ambiguity_review_0,validity_review_1,ambiguity|validity_complete_review,prompts,run_ids,prompt_template,prompt_description
0,The Disputes System shall provide view access capability for authorized users of the application.,"The requirement states that view access is provided for authorized users, but does not specify what ""view access capability"" entails. It could benefit from clarification on what constitutes ""view access"" (e.g., specific data or features that can be viewed) to ensure unambiguous interpretation.","The requirement specifies the system functionality ('provide view access capability') but lacks clarity on what 'view access' entails. It would benefit from a more detailed definition of 'view access' to eliminate ambiguity regarding the types of data or transactions users can view. Additionally, it should clarify who qualifies as 'authorized users'.","The requirement states that view access is provided for authorized users, but does not specify what ""view access capability"" entails. It could benefit from clarification on what constitutes ""view access"" (e.g., specific data or features that can be viewed) to ensure unambiguous interpretation. The requirement specifies the system functionality ('provide view access capability') but lacks clarity on what 'view access' entails. It would benefit from a more detailed definition of 'view access' to eliminate ambiguity regarding the types of data or transactions users can view. Additionally, it should clarify who qualifies as 'authorized users'.","[""\n    Instructions\n    ---\n    Step 1 - The user will hand over a python list of Requirements.\n    Step 2 - The user will hand over Context which describes a specific feature of well-written requirements\n    Step 3 - Analyze the requirement of the python list provided in Step 1 using the Context provided in Step 2. Specifically, the analysis should review the Requirement against the Context and look for opportunities for improvement to align with the Context.\n    \n    Rules\n    ---\n    Return a python list of lists which contains the results of Step 3 for each requirement. Specifically, each list element of the must be a list containing the results from the Step 3 analysis as described in Response Format.\n    \n    Response Format:\n    [\n        [Requirement A, Review of Requirement A using Context],\n        [Requirement B, Review of Requirement B using Context],\n        [Requirement C, Review of Requirement C using Context],\n        [...]\n    ]\n\n    Requirements: \n    ['The Disputes System shall provide view access capability for authorized users of the application.', 'The Disputes System shall provide update access capability for authorized users of the application.', 'The Disputes System must allow the users to select disputable transactions (based on the age of the transaction) from a user interface and initiate a dispute (ticket retrieval request or chargeback notification) on the selected transaction.', 'The Disputes System must provide the user the ability to initiate a single dispute case on multiple transactions that belong to a single merchant.', 'The Disputes System will provide the user the ability to create or initiate a ticket retrieval request.   As part of ticket retrieval creation process the system must prompt the user to enter all the required information to create the ticket retrieval request.  The ticket retrieval request is a document that is sent to merchant inquiring the validity of a transaction.']\n\n    Context:\n    2.4 C3 - Unambiguous \nDefinition: \nNeed statements and requirement statements must be stated such that their intent is clear and \ncan be interpreted in only one way by all the intended audiences. \n \nRationale: \nA need statement and a requirement statement must lend itself to a single interpretation of intent.   \nThese statements are effectively an agreement between two parties communicating intent from \none to the other and forming the basis of verification and validation that the intent was met. An \nagreement is difficult to enact unless both parties are clear on the exact obligation.   \nAs shown in Figure 11, the intent of a need or requirement must be understood, in the same way, \nby all intended audiences across the lifecycle.  \n  \nFigure 11: Needs and Requirements Understood in the Same Way \nAmbiguity leads to interpretations of a need or requirement not intended by the author leading to \nproblems such schedule slips, budget overruns, or a failure of the SOI to pass system validation \nand not be accepted for its intended use; which could result in litigation and financial loss. \nAn ambiguous need or requirement is neither Correct (C8) nor Verifiable/Validatable (C7).   \n \nGuidance: \nWhen writing a need or requirement statement, ask whether it could be interpreted more than one \nway.  It is common for people to interpret words based on their own set of filters, biases, and \nassumptions.  For example, if a person states: I need a cream for wrinkles. - what was the \nintended meaning of the word for  to give, remove, or prevent?   If someone goes to a \nbarber and states: I need my hair shorter  I want it over my ears.  what was the intended \nmeaning of the word over - cover or above? \nOften, people will use common words by themselves without using a modifier that helps the \nreceiver understand the context, and thus the intended meaning of the word used. It is a bad \npractice to assume that the meaning of the words used are understood the same way by all \nintended audiences. \n(Note: Refer to the NRM, Section 2.10, on a more detailed discussion on effective \ncommunications.) \nCustomers\n Users\n Providers Verifiers/\n Validators\n Original figure created by L. Wheatcraft. Usage granted per the INCOSE Copyright Restrictions. All other rights reserved.\nGuide to Writing Requirements  42 \n \n \nINCOSE-TP-2010-006-04| VERS/REV:4  |  1 July 2023   \nFor needs, ask whether the need is Validatable (C7), that is, whether it is stated in such a way \nthat sufficient evidence can be obtained that the need has been met based on the wording of the \nneed statement without having to interpret the stakeholder intent or make assumptions of that \nintent.  \nFor a requirement ask whether the requirement is Verifiable/Validatable (C7), that is, whether it is \nstated in such a way that sufficient evidence can be obtained that the requirement has been met \nbased on the wording of the requirement without having to interpret the intended meaning or \nmake assumptions as to the intended meaning.  \nIt is useful for the stakeholders who are involved in the implementation of the needs and resulting \nrequirements or system verification and system validation to be involved in the definition, review, \nand baseline of the needs and resulting requirements.  When they see needs or requirements \nthat are ambiguous and the stakeholders intent is not clearly communicated, they can identify the \nissue and suggest an alternate, unambiguous wording of the need or requirement statement.   \nAs a minimum, it is recommended that the need or requirement owner(s) along with the \ndevelopment team and those involved in system verification and system validation do a \nwalkthrough of the need set or requirement set to ensure that needs and requirements are \nunderstood as intended, individually and as a set.  As discussed in Section 1.9, this activity is \nreferred to as needs validation or requirement validation. \nBecause a need expression or requirement expression includes both the statement and a set of \nattributes, attributes can be used to help address any ambiguities that may still exist even in the \nmost carefully worded need statement or requirement statement.   \nDue to the limitations of language, it may prove difficult to completely remove all ambiguity.  In \nthis case, the use of the Attribute, A1- Rationale, can be used to include contextual information to \nbetter understand the reason and source of the requirement and may provide additional insight of \nthe intent, helping to reduce ambiguity and provide some increased ability to apply the \nreasonable person test.  Supporting information or commentary on how and why the \nrequirement was formed can be included in the rationale.  By including rationale in each need and \nrequirement expression, readers do not have to assume this informationit is clearly stated for \nall to see and understand in the same way. \nIn addition, Attribute, A39 - Additional Comments, may be used to add additional information \nbeyond what was included in the rationale.  Additional comments can be used to document \npossible issues with the need or design input requirement, any conflicts, status of negotiations, \nactions, design notes, implementation notes, etc.  Further, evaluation and prototyping of the \nsystem concept may have identified important guidelines for the implementation of the need or \nrequirement.  This information may be useful as the need or requirement is being reviewed and \nserves as a place to document information not addressed by other attributes. \nNote that the information contained within the attributes is meant to be informative in a \ncontractual sense (not normative), because of this, the word 'shall' must not be used in any of the \ntext contained in attributes to help ensure the amplifying information is not inadvertently \ninterpreted to be an additional requirement. \nWhen text only makes it difficult to communicate the intent of complex requirement, the inclusion \nof a diagram or trace to a model may help remove the ambiguity.  See R23. \nAmbiguity of individual need and requirement statements can be assessed during early system \nverification and design verification activities discussed in the NRM and GtVV.\n    "", ""\n    Instructions\n    ---\n    Step 1 - The user will hand over a python list of Requirements.\n    Step 2 - The user will hand over Context which describes a specific feature of well-written requirements\n    Step 3 - Analyze the requirement of the python list provided in Step 1 using the Context provided in Step 2. Specifically, the analysis should review the Requirement against the Context and look for opportunities for improvement to align with the Context.\n    \n    Rules\n    ---\n    Return a python list of lists which contains the results of Step 3 for each requirement. Specifically, each list element of the must be a list containing the results from the Step 3 analysis as described in Response Format.\n    \n    Response Format:\n    [\n        [Requirement A, Review of Requirement A using Context],\n        [Requirement B, Review of Requirement B using Context],\n        [Requirement C, Review of Requirement C using Context],\n        [...]\n    ]\n\n    Requirements: \n    ['The Disputes System shall provide view access capability for authorized users of the application.', 'The Disputes System shall provide update access capability for authorized users of the application.', 'The Disputes System must allow the users to select disputable transactions (based on the age of the transaction) from a user interface and initiate a dispute (ticket retrieval request or chargeback notification) on the selected transaction.', 'The Disputes System must provide the user the ability to initiate a single dispute case on multiple transactions that belong to a single merchant.', 'The Disputes System will provide the user the ability to create or initiate a ticket retrieval request.   As part of ticket retrieval creation process the system must prompt the user to enter all the required information to create the ticket retrieval request.  The ticket retrieval request is a document that is sent to merchant inquiring the validity of a transaction.']\n\n    Context:\n    2.4 C3 - Unambiguous \nDefinition: \nNeed statements and requirement statements must be stated such that their intent is clear and \ncan be interpreted in only one way by all the intended audiences. \n \nRationale: \nA need statement and a requirement statement must lend itself to a single interpretation of intent.   \nThese statements are effectively an agreement between two parties communicating intent from \none to the other and forming the basis of verification and validation that the intent was met. An \nagreement is difficult to enact unless both parties are clear on the exact obligation.   \nAs shown in Figure 11, the intent of a need or requirement must be understood, in the same way, \nby all intended audiences across the lifecycle.  \n  \nFigure 11: Needs and Requirements Understood in the Same Way \nAmbiguity leads to interpretations of a need or requirement not intended by the author leading to \nproblems such schedule slips, budget overruns, or a failure of the SOI to pass system validation \nand not be accepted for its intended use; which could result in litigation and financial loss. \nAn ambiguous need or requirement is neither Correct (C8) nor Verifiable/Validatable (C7).   \n \nGuidance: \nWhen writing a need or requirement statement, ask whether it could be interpreted more than one \nway.  It is common for people to interpret words based on their own set of filters, biases, and \nassumptions.  For example, if a person states: I need a cream for wrinkles. - what was the \nintended meaning of the word for  to give, remove, or prevent?   If someone goes to a \nbarber and states: I need my hair shorter  I want it over my ears.  what was the intended \nmeaning of the word over - cover or above? \nOften, people will use common words by themselves without using a modifier that helps the \nreceiver understand the context, and thus the intended meaning of the word used. It is a bad \npractice to assume that the meaning of the words used are understood the same way by all \nintended audiences. \n(Note: Refer to the NRM, Section 2.10, on a more detailed discussion on effective \ncommunications.) \nCustomers\n Users\n Providers Verifiers/\n Validators\n Original figure created by L. Wheatcraft. Usage granted per the INCOSE Copyright Restrictions. All other rights reserved.\nGuide to Writing Requirements  42 \n \n \nINCOSE-TP-2010-006-04| VERS/REV:4  |  1 July 2023   \nFor needs, ask whether the need is Validatable (C7), that is, whether it is stated in such a way \nthat sufficient evidence can be obtained that the need has been met based on the wording of the \nneed statement without having to interpret the stakeholder intent or make assumptions of that \nintent.  \nFor a requirement ask whether the requirement is Verifiable/Validatable (C7), that is, whether it is \nstated in such a way that sufficient evidence can be obtained that the requirement has been met \nbased on the wording of the requirement without having to interpret the intended meaning or \nmake assumptions as to the intended meaning.  \nIt is useful for the stakeholders who are involved in the implementation of the needs and resulting \nrequirements or system verification and system validation to be involved in the definition, review, \nand baseline of the needs and resulting requirements.  When they see needs or requirements \nthat are ambiguous and the stakeholders intent is not clearly communicated, they can identify the \nissue and suggest an alternate, unambiguous wording of the need or requirement statement.   \nAs a minimum, it is recommended that the need or requirement owner(s) along with the \ndevelopment team and those involved in system verification and system validation do a \nwalkthrough of the need set or requirement set to ensure that needs and requirements are \nunderstood as intended, individually and as a set.  As discussed in Section 1.9, this activity is \nreferred to as needs validation or requirement validation. \nBecause a need expression or requirement expression includes both the statement and a set of \nattributes, attributes can be used to help address any ambiguities that may still exist even in the \nmost carefully worded need statement or requirement statement.   \nDue to the limitations of language, it may prove difficult to completely remove all ambiguity.  In \nthis case, the use of the Attribute, A1- Rationale, can be used to include contextual information to \nbetter understand the reason and source of the requirement and may provide additional insight of \nthe intent, helping to reduce ambiguity and provide some increased ability to apply the \nreasonable person test.  Supporting information or commentary on how and why the \nrequirement was formed can be included in the rationale.  By including rationale in each need and \nrequirement expression, readers do not have to assume this informationit is clearly stated for \nall to see and understand in the same way. \nIn addition, Attribute, A39 - Additional Comments, may be used to add additional information \nbeyond what was included in the rationale.  Additional comments can be used to document \npossible issues with the need or design input requirement, any conflicts, status of negotiations, \nactions, design notes, implementation notes, etc.  Further, evaluation and prototyping of the \nsystem concept may have identified important guidelines for the implementation of the need or \nrequirement.  This information may be useful as the need or requirement is being reviewed and \nserves as a place to document information not addressed by other attributes. \nNote that the information contained within the attributes is meant to be informative in a \ncontractual sense (not normative), because of this, the word 'shall' must not be used in any of the \ntext contained in attributes to help ensure the amplifying information is not inadvertently \ninterpreted to be an additional requirement. \nWhen text only makes it difficult to communicate the intent of complex requirement, the inclusion \nof a diagram or trace to a model may help remove the ambiguity.  See R23. \nAmbiguity of individual need and requirement statements can be assessed during early system \nverification and design verification activities discussed in the NRM and GtVV.\n    ""]","['1737264001', '1737264013']",single_attribute_review,"
    This prompt template takes in a list of requirements and an INOCSE description of a particular requirement attribute.
    "
1,The Disputes System shall provide update access capability for authorized users of the application.,"Similar to the first requirement, this statement lacks specifics regarding what ""update access capability"" entails. Defining what can be updated would help in ensuring that the requirement is clearly understood by all stakeholders, thus reducing ambiguity.","Similar to Requirement A, this statement lacks specificity regarding the meaning of 'update access'. It should clarify what 'update' entails—whether it's modifying existing data, adding new data, or changing the status of disputes. Defining 'authorized users' further would help eliminate potential misinterpretations.","Similar to the first requirement, this statement lacks specifics regarding what ""update access capability"" entails. Defining what can be updated would help in ensuring that the requirement is clearly understood by all stakeholders, thus reducing ambiguity. Similar to Requirement A, this statement lacks specificity regarding the meaning of 'update access'. It should clarify what 'update' entails—whether it's modifying existing data, adding new data, or changing the status of disputes. Defining 'authorized users' further would help eliminate potential misinterpretations.","[""\n    Instructions\n    ---\n    Step 1 - The user will hand over a python list of Requirements.\n    Step 2 - The user will hand over Context which describes a specific feature of well-written requirements\n    Step 3 - Analyze the requirement of the python list provided in Step 1 using the Context provided in Step 2. Specifically, the analysis should review the Requirement against the Context and look for opportunities for improvement to align with the Context.\n    \n    Rules\n    ---\n    Return a python list of lists which contains the results of Step 3 for each requirement. Specifically, each list element of the must be a list containing the results from the Step 3 analysis as described in Response Format.\n    \n    Response Format:\n    [\n        [Requirement A, Review of Requirement A using Context],\n        [Requirement B, Review of Requirement B using Context],\n        [Requirement C, Review of Requirement C using Context],\n        [...]\n    ]\n\n    Requirements: \n    ['The Disputes System shall provide view access capability for authorized users of the application.', 'The Disputes System shall provide update access capability for authorized users of the application.', 'The Disputes System must allow the users to select disputable transactions (based on the age of the transaction) from a user interface and initiate a dispute (ticket retrieval request or chargeback notification) on the selected transaction.', 'The Disputes System must provide the user the ability to initiate a single dispute case on multiple transactions that belong to a single merchant.', 'The Disputes System will provide the user the ability to create or initiate a ticket retrieval request.   As part of ticket retrieval creation process the system must prompt the user to enter all the required information to create the ticket retrieval request.  The ticket retrieval request is a document that is sent to merchant inquiring the validity of a transaction.']\n\n    Context:\n    2.4 C3 - Unambiguous \nDefinition: \nNeed statements and requirement statements must be stated such that their intent is clear and \ncan be interpreted in only one way by all the intended audiences. \n \nRationale: \nA need statement and a requirement statement must lend itself to a single interpretation of intent.   \nThese statements are effectively an agreement between two parties communicating intent from \none to the other and forming the basis of verification and validation that the intent was met. An \nagreement is difficult to enact unless both parties are clear on the exact obligation.   \nAs shown in Figure 11, the intent of a need or requirement must be understood, in the same way, \nby all intended audiences across the lifecycle.  \n  \nFigure 11: Needs and Requirements Understood in the Same Way \nAmbiguity leads to interpretations of a need or requirement not intended by the author leading to \nproblems such schedule slips, budget overruns, or a failure of the SOI to pass system validation \nand not be accepted for its intended use; which could result in litigation and financial loss. \nAn ambiguous need or requirement is neither Correct (C8) nor Verifiable/Validatable (C7).   \n \nGuidance: \nWhen writing a need or requirement statement, ask whether it could be interpreted more than one \nway.  It is common for people to interpret words based on their own set of filters, biases, and \nassumptions.  For example, if a person states: I need a cream for wrinkles. - what was the \nintended meaning of the word for  to give, remove, or prevent?   If someone goes to a \nbarber and states: I need my hair shorter  I want it over my ears.  what was the intended \nmeaning of the word over - cover or above? \nOften, people will use common words by themselves without using a modifier that helps the \nreceiver understand the context, and thus the intended meaning of the word used. It is a bad \npractice to assume that the meaning of the words used are understood the same way by all \nintended audiences. \n(Note: Refer to the NRM, Section 2.10, on a more detailed discussion on effective \ncommunications.) \nCustomers\n Users\n Providers Verifiers/\n Validators\n Original figure created by L. Wheatcraft. Usage granted per the INCOSE Copyright Restrictions. All other rights reserved.\nGuide to Writing Requirements  42 \n \n \nINCOSE-TP-2010-006-04| VERS/REV:4  |  1 July 2023   \nFor needs, ask whether the need is Validatable (C7), that is, whether it is stated in such a way \nthat sufficient evidence can be obtained that the need has been met based on the wording of the \nneed statement without having to interpret the stakeholder intent or make assumptions of that \nintent.  \nFor a requirement ask whether the requirement is Verifiable/Validatable (C7), that is, whether it is \nstated in such a way that sufficient evidence can be obtained that the requirement has been met \nbased on the wording of the requirement without having to interpret the intended meaning or \nmake assumptions as to the intended meaning.  \nIt is useful for the stakeholders who are involved in the implementation of the needs and resulting \nrequirements or system verification and system validation to be involved in the definition, review, \nand baseline of the needs and resulting requirements.  When they see needs or requirements \nthat are ambiguous and the stakeholders intent is not clearly communicated, they can identify the \nissue and suggest an alternate, unambiguous wording of the need or requirement statement.   \nAs a minimum, it is recommended that the need or requirement owner(s) along with the \ndevelopment team and those involved in system verification and system validation do a \nwalkthrough of the need set or requirement set to ensure that needs and requirements are \nunderstood as intended, individually and as a set.  As discussed in Section 1.9, this activity is \nreferred to as needs validation or requirement validation. \nBecause a need expression or requirement expression includes both the statement and a set of \nattributes, attributes can be used to help address any ambiguities that may still exist even in the \nmost carefully worded need statement or requirement statement.   \nDue to the limitations of language, it may prove difficult to completely remove all ambiguity.  In \nthis case, the use of the Attribute, A1- Rationale, can be used to include contextual information to \nbetter understand the reason and source of the requirement and may provide additional insight of \nthe intent, helping to reduce ambiguity and provide some increased ability to apply the \nreasonable person test.  Supporting information or commentary on how and why the \nrequirement was formed can be included in the rationale.  By including rationale in each need and \nrequirement expression, readers do not have to assume this informationit is clearly stated for \nall to see and understand in the same way. \nIn addition, Attribute, A39 - Additional Comments, may be used to add additional information \nbeyond what was included in the rationale.  Additional comments can be used to document \npossible issues with the need or design input requirement, any conflicts, status of negotiations, \nactions, design notes, implementation notes, etc.  Further, evaluation and prototyping of the \nsystem concept may have identified important guidelines for the implementation of the need or \nrequirement.  This information may be useful as the need or requirement is being reviewed and \nserves as a place to document information not addressed by other attributes. \nNote that the information contained within the attributes is meant to be informative in a \ncontractual sense (not normative), because of this, the word 'shall' must not be used in any of the \ntext contained in attributes to help ensure the amplifying information is not inadvertently \ninterpreted to be an additional requirement. \nWhen text only makes it difficult to communicate the intent of complex requirement, the inclusion \nof a diagram or trace to a model may help remove the ambiguity.  See R23. \nAmbiguity of individual need and requirement statements can be assessed during early system \nverification and design verification activities discussed in the NRM and GtVV.\n    "", ""\n    Instructions\n    ---\n    Step 1 - The user will hand over a python list of Requirements.\n    Step 2 - The user will hand over Context which describes a specific feature of well-written requirements\n    Step 3 - Analyze the requirement of the python list provided in Step 1 using the Context provided in Step 2. Specifically, the analysis should review the Requirement against the Context and look for opportunities for improvement to align with the Context.\n    \n    Rules\n    ---\n    Return a python list of lists which contains the results of Step 3 for each requirement. Specifically, each list element of the must be a list containing the results from the Step 3 analysis as described in Response Format.\n    \n    Response Format:\n    [\n        [Requirement A, Review of Requirement A using Context],\n        [Requirement B, Review of Requirement B using Context],\n        [Requirement C, Review of Requirement C using Context],\n        [...]\n    ]\n\n    Requirements: \n    ['The Disputes System shall provide view access capability for authorized users of the application.', 'The Disputes System shall provide update access capability for authorized users of the application.', 'The Disputes System must allow the users to select disputable transactions (based on the age of the transaction) from a user interface and initiate a dispute (ticket retrieval request or chargeback notification) on the selected transaction.', 'The Disputes System must provide the user the ability to initiate a single dispute case on multiple transactions that belong to a single merchant.', 'The Disputes System will provide the user the ability to create or initiate a ticket retrieval request.   As part of ticket retrieval creation process the system must prompt the user to enter all the required information to create the ticket retrieval request.  The ticket retrieval request is a document that is sent to merchant inquiring the validity of a transaction.']\n\n    Context:\n    2.4 C3 - Unambiguous \nDefinition: \nNeed statements and requirement statements must be stated such that their intent is clear and \ncan be interpreted in only one way by all the intended audiences. \n \nRationale: \nA need statement and a requirement statement must lend itself to a single interpretation of intent.   \nThese statements are effectively an agreement between two parties communicating intent from \none to the other and forming the basis of verification and validation that the intent was met. An \nagreement is difficult to enact unless both parties are clear on the exact obligation.   \nAs shown in Figure 11, the intent of a need or requirement must be understood, in the same way, \nby all intended audiences across the lifecycle.  \n  \nFigure 11: Needs and Requirements Understood in the Same Way \nAmbiguity leads to interpretations of a need or requirement not intended by the author leading to \nproblems such schedule slips, budget overruns, or a failure of the SOI to pass system validation \nand not be accepted for its intended use; which could result in litigation and financial loss. \nAn ambiguous need or requirement is neither Correct (C8) nor Verifiable/Validatable (C7).   \n \nGuidance: \nWhen writing a need or requirement statement, ask whether it could be interpreted more than one \nway.  It is common for people to interpret words based on their own set of filters, biases, and \nassumptions.  For example, if a person states: I need a cream for wrinkles. - what was the \nintended meaning of the word for  to give, remove, or prevent?   If someone goes to a \nbarber and states: I need my hair shorter  I want it over my ears.  what was the intended \nmeaning of the word over - cover or above? \nOften, people will use common words by themselves without using a modifier that helps the \nreceiver understand the context, and thus the intended meaning of the word used. It is a bad \npractice to assume that the meaning of the words used are understood the same way by all \nintended audiences. \n(Note: Refer to the NRM, Section 2.10, on a more detailed discussion on effective \ncommunications.) \nCustomers\n Users\n Providers Verifiers/\n Validators\n Original figure created by L. Wheatcraft. Usage granted per the INCOSE Copyright Restrictions. All other rights reserved.\nGuide to Writing Requirements  42 \n \n \nINCOSE-TP-2010-006-04| VERS/REV:4  |  1 July 2023   \nFor needs, ask whether the need is Validatable (C7), that is, whether it is stated in such a way \nthat sufficient evidence can be obtained that the need has been met based on the wording of the \nneed statement without having to interpret the stakeholder intent or make assumptions of that \nintent.  \nFor a requirement ask whether the requirement is Verifiable/Validatable (C7), that is, whether it is \nstated in such a way that sufficient evidence can be obtained that the requirement has been met \nbased on the wording of the requirement without having to interpret the intended meaning or \nmake assumptions as to the intended meaning.  \nIt is useful for the stakeholders who are involved in the implementation of the needs and resulting \nrequirements or system verification and system validation to be involved in the definition, review, \nand baseline of the needs and resulting requirements.  When they see needs or requirements \nthat are ambiguous and the stakeholders intent is not clearly communicated, they can identify the \nissue and suggest an alternate, unambiguous wording of the need or requirement statement.   \nAs a minimum, it is recommended that the need or requirement owner(s) along with the \ndevelopment team and those involved in system verification and system validation do a \nwalkthrough of the need set or requirement set to ensure that needs and requirements are \nunderstood as intended, individually and as a set.  As discussed in Section 1.9, this activity is \nreferred to as needs validation or requirement validation. \nBecause a need expression or requirement expression includes both the statement and a set of \nattributes, attributes can be used to help address any ambiguities that may still exist even in the \nmost carefully worded need statement or requirement statement.   \nDue to the limitations of language, it may prove difficult to completely remove all ambiguity.  In \nthis case, the use of the Attribute, A1- Rationale, can be used to include contextual information to \nbetter understand the reason and source of the requirement and may provide additional insight of \nthe intent, helping to reduce ambiguity and provide some increased ability to apply the \nreasonable person test.  Supporting information or commentary on how and why the \nrequirement was formed can be included in the rationale.  By including rationale in each need and \nrequirement expression, readers do not have to assume this informationit is clearly stated for \nall to see and understand in the same way. \nIn addition, Attribute, A39 - Additional Comments, may be used to add additional information \nbeyond what was included in the rationale.  Additional comments can be used to document \npossible issues with the need or design input requirement, any conflicts, status of negotiations, \nactions, design notes, implementation notes, etc.  Further, evaluation and prototyping of the \nsystem concept may have identified important guidelines for the implementation of the need or \nrequirement.  This information may be useful as the need or requirement is being reviewed and \nserves as a place to document information not addressed by other attributes. \nNote that the information contained within the attributes is meant to be informative in a \ncontractual sense (not normative), because of this, the word 'shall' must not be used in any of the \ntext contained in attributes to help ensure the amplifying information is not inadvertently \ninterpreted to be an additional requirement. \nWhen text only makes it difficult to communicate the intent of complex requirement, the inclusion \nof a diagram or trace to a model may help remove the ambiguity.  See R23. \nAmbiguity of individual need and requirement statements can be assessed during early system \nverification and design verification activities discussed in the NRM and GtVV.\n    ""]","['1737264001', '1737264013']",single_attribute_review,"
    This prompt template takes in a list of requirements and an INOCSE description of a particular requirement attribute.
    "
2,The Disputes System must allow the users to select disputable transactions (based on the age of the transaction) from a user interface and initiate a dispute (ticket retrieval request or chargeback notification) on the selected transaction.,"This requirement is more detailed but could still be ambiguous. The term ""disputable transactions"" is subjective; it should specify what criteria define ""disputable"" transactions to mitigate interpretation issues. Additionally, it is unclear what actions constitute ""initiate a dispute"" and should be explicitly defined.","This requirement mixes multiple functionalities into one statement, which could lead to ambiguity. It should be split into two or more distinct requirements: one for selecting disputable transactions and another for initiating disputes. Furthermore, specifying criteria for 'age of the transaction' as well as clarifying the types of disputes would improve verifiability.","This requirement is more detailed but could still be ambiguous. The term ""disputable transactions"" is subjective; it should specify what criteria define ""disputable"" transactions to mitigate interpretation issues. Additionally, it is unclear what actions constitute ""initiate a dispute"" and should be explicitly defined. This requirement mixes multiple functionalities into one statement, which could lead to ambiguity. It should be split into two or more distinct requirements: one for selecting disputable transactions and another for initiating disputes. Furthermore, specifying criteria for 'age of the transaction' as well as clarifying the types of disputes would improve verifiability.","[""\n    Instructions\n    ---\n    Step 1 - The user will hand over a python list of Requirements.\n    Step 2 - The user will hand over Context which describes a specific feature of well-written requirements\n    Step 3 - Analyze the requirement of the python list provided in Step 1 using the Context provided in Step 2. Specifically, the analysis should review the Requirement against the Context and look for opportunities for improvement to align with the Context.\n    \n    Rules\n    ---\n    Return a python list of lists which contains the results of Step 3 for each requirement. Specifically, each list element of the must be a list containing the results from the Step 3 analysis as described in Response Format.\n    \n    Response Format:\n    [\n        [Requirement A, Review of Requirement A using Context],\n        [Requirement B, Review of Requirement B using Context],\n        [Requirement C, Review of Requirement C using Context],\n        [...]\n    ]\n\n    Requirements: \n    ['The Disputes System shall provide view access capability for authorized users of the application.', 'The Disputes System shall provide update access capability for authorized users of the application.', 'The Disputes System must allow the users to select disputable transactions (based on the age of the transaction) from a user interface and initiate a dispute (ticket retrieval request or chargeback notification) on the selected transaction.', 'The Disputes System must provide the user the ability to initiate a single dispute case on multiple transactions that belong to a single merchant.', 'The Disputes System will provide the user the ability to create or initiate a ticket retrieval request.   As part of ticket retrieval creation process the system must prompt the user to enter all the required information to create the ticket retrieval request.  The ticket retrieval request is a document that is sent to merchant inquiring the validity of a transaction.']\n\n    Context:\n    2.4 C3 - Unambiguous \nDefinition: \nNeed statements and requirement statements must be stated such that their intent is clear and \ncan be interpreted in only one way by all the intended audiences. \n \nRationale: \nA need statement and a requirement statement must lend itself to a single interpretation of intent.   \nThese statements are effectively an agreement between two parties communicating intent from \none to the other and forming the basis of verification and validation that the intent was met. An \nagreement is difficult to enact unless both parties are clear on the exact obligation.   \nAs shown in Figure 11, the intent of a need or requirement must be understood, in the same way, \nby all intended audiences across the lifecycle.  \n  \nFigure 11: Needs and Requirements Understood in the Same Way \nAmbiguity leads to interpretations of a need or requirement not intended by the author leading to \nproblems such schedule slips, budget overruns, or a failure of the SOI to pass system validation \nand not be accepted for its intended use; which could result in litigation and financial loss. \nAn ambiguous need or requirement is neither Correct (C8) nor Verifiable/Validatable (C7).   \n \nGuidance: \nWhen writing a need or requirement statement, ask whether it could be interpreted more than one \nway.  It is common for people to interpret words based on their own set of filters, biases, and \nassumptions.  For example, if a person states: I need a cream for wrinkles. - what was the \nintended meaning of the word for  to give, remove, or prevent?   If someone goes to a \nbarber and states: I need my hair shorter  I want it over my ears.  what was the intended \nmeaning of the word over - cover or above? \nOften, people will use common words by themselves without using a modifier that helps the \nreceiver understand the context, and thus the intended meaning of the word used. It is a bad \npractice to assume that the meaning of the words used are understood the same way by all \nintended audiences. \n(Note: Refer to the NRM, Section 2.10, on a more detailed discussion on effective \ncommunications.) \nCustomers\n Users\n Providers Verifiers/\n Validators\n Original figure created by L. Wheatcraft. Usage granted per the INCOSE Copyright Restrictions. All other rights reserved.\nGuide to Writing Requirements  42 \n \n \nINCOSE-TP-2010-006-04| VERS/REV:4  |  1 July 2023   \nFor needs, ask whether the need is Validatable (C7), that is, whether it is stated in such a way \nthat sufficient evidence can be obtained that the need has been met based on the wording of the \nneed statement without having to interpret the stakeholder intent or make assumptions of that \nintent.  \nFor a requirement ask whether the requirement is Verifiable/Validatable (C7), that is, whether it is \nstated in such a way that sufficient evidence can be obtained that the requirement has been met \nbased on the wording of the requirement without having to interpret the intended meaning or \nmake assumptions as to the intended meaning.  \nIt is useful for the stakeholders who are involved in the implementation of the needs and resulting \nrequirements or system verification and system validation to be involved in the definition, review, \nand baseline of the needs and resulting requirements.  When they see needs or requirements \nthat are ambiguous and the stakeholders intent is not clearly communicated, they can identify the \nissue and suggest an alternate, unambiguous wording of the need or requirement statement.   \nAs a minimum, it is recommended that the need or requirement owner(s) along with the \ndevelopment team and those involved in system verification and system validation do a \nwalkthrough of the need set or requirement set to ensure that needs and requirements are \nunderstood as intended, individually and as a set.  As discussed in Section 1.9, this activity is \nreferred to as needs validation or requirement validation. \nBecause a need expression or requirement expression includes both the statement and a set of \nattributes, attributes can be used to help address any ambiguities that may still exist even in the \nmost carefully worded need statement or requirement statement.   \nDue to the limitations of language, it may prove difficult to completely remove all ambiguity.  In \nthis case, the use of the Attribute, A1- Rationale, can be used to include contextual information to \nbetter understand the reason and source of the requirement and may provide additional insight of \nthe intent, helping to reduce ambiguity and provide some increased ability to apply the \nreasonable person test.  Supporting information or commentary on how and why the \nrequirement was formed can be included in the rationale.  By including rationale in each need and \nrequirement expression, readers do not have to assume this informationit is clearly stated for \nall to see and understand in the same way. \nIn addition, Attribute, A39 - Additional Comments, may be used to add additional information \nbeyond what was included in the rationale.  Additional comments can be used to document \npossible issues with the need or design input requirement, any conflicts, status of negotiations, \nactions, design notes, implementation notes, etc.  Further, evaluation and prototyping of the \nsystem concept may have identified important guidelines for the implementation of the need or \nrequirement.  This information may be useful as the need or requirement is being reviewed and \nserves as a place to document information not addressed by other attributes. \nNote that the information contained within the attributes is meant to be informative in a \ncontractual sense (not normative), because of this, the word 'shall' must not be used in any of the \ntext contained in attributes to help ensure the amplifying information is not inadvertently \ninterpreted to be an additional requirement. \nWhen text only makes it difficult to communicate the intent of complex requirement, the inclusion \nof a diagram or trace to a model may help remove the ambiguity.  See R23. \nAmbiguity of individual need and requirement statements can be assessed during early system \nverification and design verification activities discussed in the NRM and GtVV.\n    "", ""\n    Instructions\n    ---\n    Step 1 - The user will hand over a python list of Requirements.\n    Step 2 - The user will hand over Context which describes a specific feature of well-written requirements\n    Step 3 - Analyze the requirement of the python list provided in Step 1 using the Context provided in Step 2. Specifically, the analysis should review the Requirement against the Context and look for opportunities for improvement to align with the Context.\n    \n    Rules\n    ---\n    Return a python list of lists which contains the results of Step 3 for each requirement. Specifically, each list element of the must be a list containing the results from the Step 3 analysis as described in Response Format.\n    \n    Response Format:\n    [\n        [Requirement A, Review of Requirement A using Context],\n        [Requirement B, Review of Requirement B using Context],\n        [Requirement C, Review of Requirement C using Context],\n        [...]\n    ]\n\n    Requirements: \n    ['The Disputes System shall provide view access capability for authorized users of the application.', 'The Disputes System shall provide update access capability for authorized users of the application.', 'The Disputes System must allow the users to select disputable transactions (based on the age of the transaction) from a user interface and initiate a dispute (ticket retrieval request or chargeback notification) on the selected transaction.', 'The Disputes System must provide the user the ability to initiate a single dispute case on multiple transactions that belong to a single merchant.', 'The Disputes System will provide the user the ability to create or initiate a ticket retrieval request.   As part of ticket retrieval creation process the system must prompt the user to enter all the required information to create the ticket retrieval request.  The ticket retrieval request is a document that is sent to merchant inquiring the validity of a transaction.']\n\n    Context:\n    2.4 C3 - Unambiguous \nDefinition: \nNeed statements and requirement statements must be stated such that their intent is clear and \ncan be interpreted in only one way by all the intended audiences. \n \nRationale: \nA need statement and a requirement statement must lend itself to a single interpretation of intent.   \nThese statements are effectively an agreement between two parties communicating intent from \none to the other and forming the basis of verification and validation that the intent was met. An \nagreement is difficult to enact unless both parties are clear on the exact obligation.   \nAs shown in Figure 11, the intent of a need or requirement must be understood, in the same way, \nby all intended audiences across the lifecycle.  \n  \nFigure 11: Needs and Requirements Understood in the Same Way \nAmbiguity leads to interpretations of a need or requirement not intended by the author leading to \nproblems such schedule slips, budget overruns, or a failure of the SOI to pass system validation \nand not be accepted for its intended use; which could result in litigation and financial loss. \nAn ambiguous need or requirement is neither Correct (C8) nor Verifiable/Validatable (C7).   \n \nGuidance: \nWhen writing a need or requirement statement, ask whether it could be interpreted more than one \nway.  It is common for people to interpret words based on their own set of filters, biases, and \nassumptions.  For example, if a person states: I need a cream for wrinkles. - what was the \nintended meaning of the word for  to give, remove, or prevent?   If someone goes to a \nbarber and states: I need my hair shorter  I want it over my ears.  what was the intended \nmeaning of the word over - cover or above? \nOften, people will use common words by themselves without using a modifier that helps the \nreceiver understand the context, and thus the intended meaning of the word used. It is a bad \npractice to assume that the meaning of the words used are understood the same way by all \nintended audiences. \n(Note: Refer to the NRM, Section 2.10, on a more detailed discussion on effective \ncommunications.) \nCustomers\n Users\n Providers Verifiers/\n Validators\n Original figure created by L. Wheatcraft. Usage granted per the INCOSE Copyright Restrictions. All other rights reserved.\nGuide to Writing Requirements  42 \n \n \nINCOSE-TP-2010-006-04| VERS/REV:4  |  1 July 2023   \nFor needs, ask whether the need is Validatable (C7), that is, whether it is stated in such a way \nthat sufficient evidence can be obtained that the need has been met based on the wording of the \nneed statement without having to interpret the stakeholder intent or make assumptions of that \nintent.  \nFor a requirement ask whether the requirement is Verifiable/Validatable (C7), that is, whether it is \nstated in such a way that sufficient evidence can be obtained that the requirement has been met \nbased on the wording of the requirement without having to interpret the intended meaning or \nmake assumptions as to the intended meaning.  \nIt is useful for the stakeholders who are involved in the implementation of the needs and resulting \nrequirements or system verification and system validation to be involved in the definition, review, \nand baseline of the needs and resulting requirements.  When they see needs or requirements \nthat are ambiguous and the stakeholders intent is not clearly communicated, they can identify the \nissue and suggest an alternate, unambiguous wording of the need or requirement statement.   \nAs a minimum, it is recommended that the need or requirement owner(s) along with the \ndevelopment team and those involved in system verification and system validation do a \nwalkthrough of the need set or requirement set to ensure that needs and requirements are \nunderstood as intended, individually and as a set.  As discussed in Section 1.9, this activity is \nreferred to as needs validation or requirement validation. \nBecause a need expression or requirement expression includes both the statement and a set of \nattributes, attributes can be used to help address any ambiguities that may still exist even in the \nmost carefully worded need statement or requirement statement.   \nDue to the limitations of language, it may prove difficult to completely remove all ambiguity.  In \nthis case, the use of the Attribute, A1- Rationale, can be used to include contextual information to \nbetter understand the reason and source of the requirement and may provide additional insight of \nthe intent, helping to reduce ambiguity and provide some increased ability to apply the \nreasonable person test.  Supporting information or commentary on how and why the \nrequirement was formed can be included in the rationale.  By including rationale in each need and \nrequirement expression, readers do not have to assume this informationit is clearly stated for \nall to see and understand in the same way. \nIn addition, Attribute, A39 - Additional Comments, may be used to add additional information \nbeyond what was included in the rationale.  Additional comments can be used to document \npossible issues with the need or design input requirement, any conflicts, status of negotiations, \nactions, design notes, implementation notes, etc.  Further, evaluation and prototyping of the \nsystem concept may have identified important guidelines for the implementation of the need or \nrequirement.  This information may be useful as the need or requirement is being reviewed and \nserves as a place to document information not addressed by other attributes. \nNote that the information contained within the attributes is meant to be informative in a \ncontractual sense (not normative), because of this, the word 'shall' must not be used in any of the \ntext contained in attributes to help ensure the amplifying information is not inadvertently \ninterpreted to be an additional requirement. \nWhen text only makes it difficult to communicate the intent of complex requirement, the inclusion \nof a diagram or trace to a model may help remove the ambiguity.  See R23. \nAmbiguity of individual need and requirement statements can be assessed during early system \nverification and design verification activities discussed in the NRM and GtVV.\n    ""]","['1737264001', '1737264013']",single_attribute_review,"
    This prompt template takes in a list of requirements and an INOCSE description of a particular requirement attribute.
    "
3,The Disputes System must provide the user the ability to initiate a single dispute case on multiple transactions that belong to a single merchant.,"The phrase ""initiate a single dispute case"" could lead to different interpretations. It should clarify if it means that one dispute case can contain multiple transactions or a single request can span multiple cases. Clear examples or definitions may enhance understanding and address ambiguity.","The requirement is somewhat clear, but it might lead to ambiguity regarding 'multiple transactions' and 'single merchant'. It needs clarification on what constitutes 'multiple transactions' (e.g. number of transactions) and how the system identifies a 'single merchant'. Elaboration on whether there are limitations on the type or total number of transactions could further improve clarity.","The phrase ""initiate a single dispute case"" could lead to different interpretations. It should clarify if it means that one dispute case can contain multiple transactions or a single request can span multiple cases. Clear examples or definitions may enhance understanding and address ambiguity. The requirement is somewhat clear, but it might lead to ambiguity regarding 'multiple transactions' and 'single merchant'. It needs clarification on what constitutes 'multiple transactions' (e.g. number of transactions) and how the system identifies a 'single merchant'. Elaboration on whether there are limitations on the type or total number of transactions could further improve clarity.","[""\n    Instructions\n    ---\n    Step 1 - The user will hand over a python list of Requirements.\n    Step 2 - The user will hand over Context which describes a specific feature of well-written requirements\n    Step 3 - Analyze the requirement of the python list provided in Step 1 using the Context provided in Step 2. Specifically, the analysis should review the Requirement against the Context and look for opportunities for improvement to align with the Context.\n    \n    Rules\n    ---\n    Return a python list of lists which contains the results of Step 3 for each requirement. Specifically, each list element of the must be a list containing the results from the Step 3 analysis as described in Response Format.\n    \n    Response Format:\n    [\n        [Requirement A, Review of Requirement A using Context],\n        [Requirement B, Review of Requirement B using Context],\n        [Requirement C, Review of Requirement C using Context],\n        [...]\n    ]\n\n    Requirements: \n    ['The Disputes System shall provide view access capability for authorized users of the application.', 'The Disputes System shall provide update access capability for authorized users of the application.', 'The Disputes System must allow the users to select disputable transactions (based on the age of the transaction) from a user interface and initiate a dispute (ticket retrieval request or chargeback notification) on the selected transaction.', 'The Disputes System must provide the user the ability to initiate a single dispute case on multiple transactions that belong to a single merchant.', 'The Disputes System will provide the user the ability to create or initiate a ticket retrieval request.   As part of ticket retrieval creation process the system must prompt the user to enter all the required information to create the ticket retrieval request.  The ticket retrieval request is a document that is sent to merchant inquiring the validity of a transaction.']\n\n    Context:\n    2.4 C3 - Unambiguous \nDefinition: \nNeed statements and requirement statements must be stated such that their intent is clear and \ncan be interpreted in only one way by all the intended audiences. \n \nRationale: \nA need statement and a requirement statement must lend itself to a single interpretation of intent.   \nThese statements are effectively an agreement between two parties communicating intent from \none to the other and forming the basis of verification and validation that the intent was met. An \nagreement is difficult to enact unless both parties are clear on the exact obligation.   \nAs shown in Figure 11, the intent of a need or requirement must be understood, in the same way, \nby all intended audiences across the lifecycle.  \n  \nFigure 11: Needs and Requirements Understood in the Same Way \nAmbiguity leads to interpretations of a need or requirement not intended by the author leading to \nproblems such schedule slips, budget overruns, or a failure of the SOI to pass system validation \nand not be accepted for its intended use; which could result in litigation and financial loss. \nAn ambiguous need or requirement is neither Correct (C8) nor Verifiable/Validatable (C7).   \n \nGuidance: \nWhen writing a need or requirement statement, ask whether it could be interpreted more than one \nway.  It is common for people to interpret words based on their own set of filters, biases, and \nassumptions.  For example, if a person states: I need a cream for wrinkles. - what was the \nintended meaning of the word for  to give, remove, or prevent?   If someone goes to a \nbarber and states: I need my hair shorter  I want it over my ears.  what was the intended \nmeaning of the word over - cover or above? \nOften, people will use common words by themselves without using a modifier that helps the \nreceiver understand the context, and thus the intended meaning of the word used. It is a bad \npractice to assume that the meaning of the words used are understood the same way by all \nintended audiences. \n(Note: Refer to the NRM, Section 2.10, on a more detailed discussion on effective \ncommunications.) \nCustomers\n Users\n Providers Verifiers/\n Validators\n Original figure created by L. Wheatcraft. Usage granted per the INCOSE Copyright Restrictions. All other rights reserved.\nGuide to Writing Requirements  42 \n \n \nINCOSE-TP-2010-006-04| VERS/REV:4  |  1 July 2023   \nFor needs, ask whether the need is Validatable (C7), that is, whether it is stated in such a way \nthat sufficient evidence can be obtained that the need has been met based on the wording of the \nneed statement without having to interpret the stakeholder intent or make assumptions of that \nintent.  \nFor a requirement ask whether the requirement is Verifiable/Validatable (C7), that is, whether it is \nstated in such a way that sufficient evidence can be obtained that the requirement has been met \nbased on the wording of the requirement without having to interpret the intended meaning or \nmake assumptions as to the intended meaning.  \nIt is useful for the stakeholders who are involved in the implementation of the needs and resulting \nrequirements or system verification and system validation to be involved in the definition, review, \nand baseline of the needs and resulting requirements.  When they see needs or requirements \nthat are ambiguous and the stakeholders intent is not clearly communicated, they can identify the \nissue and suggest an alternate, unambiguous wording of the need or requirement statement.   \nAs a minimum, it is recommended that the need or requirement owner(s) along with the \ndevelopment team and those involved in system verification and system validation do a \nwalkthrough of the need set or requirement set to ensure that needs and requirements are \nunderstood as intended, individually and as a set.  As discussed in Section 1.9, this activity is \nreferred to as needs validation or requirement validation. \nBecause a need expression or requirement expression includes both the statement and a set of \nattributes, attributes can be used to help address any ambiguities that may still exist even in the \nmost carefully worded need statement or requirement statement.   \nDue to the limitations of language, it may prove difficult to completely remove all ambiguity.  In \nthis case, the use of the Attribute, A1- Rationale, can be used to include contextual information to \nbetter understand the reason and source of the requirement and may provide additional insight of \nthe intent, helping to reduce ambiguity and provide some increased ability to apply the \nreasonable person test.  Supporting information or commentary on how and why the \nrequirement was formed can be included in the rationale.  By including rationale in each need and \nrequirement expression, readers do not have to assume this informationit is clearly stated for \nall to see and understand in the same way. \nIn addition, Attribute, A39 - Additional Comments, may be used to add additional information \nbeyond what was included in the rationale.  Additional comments can be used to document \npossible issues with the need or design input requirement, any conflicts, status of negotiations, \nactions, design notes, implementation notes, etc.  Further, evaluation and prototyping of the \nsystem concept may have identified important guidelines for the implementation of the need or \nrequirement.  This information may be useful as the need or requirement is being reviewed and \nserves as a place to document information not addressed by other attributes. \nNote that the information contained within the attributes is meant to be informative in a \ncontractual sense (not normative), because of this, the word 'shall' must not be used in any of the \ntext contained in attributes to help ensure the amplifying information is not inadvertently \ninterpreted to be an additional requirement. \nWhen text only makes it difficult to communicate the intent of complex requirement, the inclusion \nof a diagram or trace to a model may help remove the ambiguity.  See R23. \nAmbiguity of individual need and requirement statements can be assessed during early system \nverification and design verification activities discussed in the NRM and GtVV.\n    "", ""\n    Instructions\n    ---\n    Step 1 - The user will hand over a python list of Requirements.\n    Step 2 - The user will hand over Context which describes a specific feature of well-written requirements\n    Step 3 - Analyze the requirement of the python list provided in Step 1 using the Context provided in Step 2. Specifically, the analysis should review the Requirement against the Context and look for opportunities for improvement to align with the Context.\n    \n    Rules\n    ---\n    Return a python list of lists which contains the results of Step 3 for each requirement. Specifically, each list element of the must be a list containing the results from the Step 3 analysis as described in Response Format.\n    \n    Response Format:\n    [\n        [Requirement A, Review of Requirement A using Context],\n        [Requirement B, Review of Requirement B using Context],\n        [Requirement C, Review of Requirement C using Context],\n        [...]\n    ]\n\n    Requirements: \n    ['The Disputes System shall provide view access capability for authorized users of the application.', 'The Disputes System shall provide update access capability for authorized users of the application.', 'The Disputes System must allow the users to select disputable transactions (based on the age of the transaction) from a user interface and initiate a dispute (ticket retrieval request or chargeback notification) on the selected transaction.', 'The Disputes System must provide the user the ability to initiate a single dispute case on multiple transactions that belong to a single merchant.', 'The Disputes System will provide the user the ability to create or initiate a ticket retrieval request.   As part of ticket retrieval creation process the system must prompt the user to enter all the required information to create the ticket retrieval request.  The ticket retrieval request is a document that is sent to merchant inquiring the validity of a transaction.']\n\n    Context:\n    2.4 C3 - Unambiguous \nDefinition: \nNeed statements and requirement statements must be stated such that their intent is clear and \ncan be interpreted in only one way by all the intended audiences. \n \nRationale: \nA need statement and a requirement statement must lend itself to a single interpretation of intent.   \nThese statements are effectively an agreement between two parties communicating intent from \none to the other and forming the basis of verification and validation that the intent was met. An \nagreement is difficult to enact unless both parties are clear on the exact obligation.   \nAs shown in Figure 11, the intent of a need or requirement must be understood, in the same way, \nby all intended audiences across the lifecycle.  \n  \nFigure 11: Needs and Requirements Understood in the Same Way \nAmbiguity leads to interpretations of a need or requirement not intended by the author leading to \nproblems such schedule slips, budget overruns, or a failure of the SOI to pass system validation \nand not be accepted for its intended use; which could result in litigation and financial loss. \nAn ambiguous need or requirement is neither Correct (C8) nor Verifiable/Validatable (C7).   \n \nGuidance: \nWhen writing a need or requirement statement, ask whether it could be interpreted more than one \nway.  It is common for people to interpret words based on their own set of filters, biases, and \nassumptions.  For example, if a person states: I need a cream for wrinkles. - what was the \nintended meaning of the word for  to give, remove, or prevent?   If someone goes to a \nbarber and states: I need my hair shorter  I want it over my ears.  what was the intended \nmeaning of the word over - cover or above? \nOften, people will use common words by themselves without using a modifier that helps the \nreceiver understand the context, and thus the intended meaning of the word used. It is a bad \npractice to assume that the meaning of the words used are understood the same way by all \nintended audiences. \n(Note: Refer to the NRM, Section 2.10, on a more detailed discussion on effective \ncommunications.) \nCustomers\n Users\n Providers Verifiers/\n Validators\n Original figure created by L. Wheatcraft. Usage granted per the INCOSE Copyright Restrictions. All other rights reserved.\nGuide to Writing Requirements  42 \n \n \nINCOSE-TP-2010-006-04| VERS/REV:4  |  1 July 2023   \nFor needs, ask whether the need is Validatable (C7), that is, whether it is stated in such a way \nthat sufficient evidence can be obtained that the need has been met based on the wording of the \nneed statement without having to interpret the stakeholder intent or make assumptions of that \nintent.  \nFor a requirement ask whether the requirement is Verifiable/Validatable (C7), that is, whether it is \nstated in such a way that sufficient evidence can be obtained that the requirement has been met \nbased on the wording of the requirement without having to interpret the intended meaning or \nmake assumptions as to the intended meaning.  \nIt is useful for the stakeholders who are involved in the implementation of the needs and resulting \nrequirements or system verification and system validation to be involved in the definition, review, \nand baseline of the needs and resulting requirements.  When they see needs or requirements \nthat are ambiguous and the stakeholders intent is not clearly communicated, they can identify the \nissue and suggest an alternate, unambiguous wording of the need or requirement statement.   \nAs a minimum, it is recommended that the need or requirement owner(s) along with the \ndevelopment team and those involved in system verification and system validation do a \nwalkthrough of the need set or requirement set to ensure that needs and requirements are \nunderstood as intended, individually and as a set.  As discussed in Section 1.9, this activity is \nreferred to as needs validation or requirement validation. \nBecause a need expression or requirement expression includes both the statement and a set of \nattributes, attributes can be used to help address any ambiguities that may still exist even in the \nmost carefully worded need statement or requirement statement.   \nDue to the limitations of language, it may prove difficult to completely remove all ambiguity.  In \nthis case, the use of the Attribute, A1- Rationale, can be used to include contextual information to \nbetter understand the reason and source of the requirement and may provide additional insight of \nthe intent, helping to reduce ambiguity and provide some increased ability to apply the \nreasonable person test.  Supporting information or commentary on how and why the \nrequirement was formed can be included in the rationale.  By including rationale in each need and \nrequirement expression, readers do not have to assume this informationit is clearly stated for \nall to see and understand in the same way. \nIn addition, Attribute, A39 - Additional Comments, may be used to add additional information \nbeyond what was included in the rationale.  Additional comments can be used to document \npossible issues with the need or design input requirement, any conflicts, status of negotiations, \nactions, design notes, implementation notes, etc.  Further, evaluation and prototyping of the \nsystem concept may have identified important guidelines for the implementation of the need or \nrequirement.  This information may be useful as the need or requirement is being reviewed and \nserves as a place to document information not addressed by other attributes. \nNote that the information contained within the attributes is meant to be informative in a \ncontractual sense (not normative), because of this, the word 'shall' must not be used in any of the \ntext contained in attributes to help ensure the amplifying information is not inadvertently \ninterpreted to be an additional requirement. \nWhen text only makes it difficult to communicate the intent of complex requirement, the inclusion \nof a diagram or trace to a model may help remove the ambiguity.  See R23. \nAmbiguity of individual need and requirement statements can be assessed during early system \nverification and design verification activities discussed in the NRM and GtVV.\n    ""]","['1737264001', '1737264013']",single_attribute_review,"
    This prompt template takes in a list of requirements and an INOCSE description of a particular requirement attribute.
    "
4,The Disputes System will provide the user the ability to create or initiate a ticket retrieval request. As part of ticket retrieval creation process the system must prompt the user to enter all the required information to create the ticket retrieval request. The ticket retrieval request is a document that is sent to merchant inquiring the validity of a transaction.,"The use of ""create or initiate"" may cause confusion; it should clarify if these actions are synonymous or distinct steps. Additionally, terms like ""all the required information"" should list specific fields or criteria needed. While the latter part defines what a ticket retrieval request is, more detailed steps in the process and clarifications on user prompts would improve clarity and reduce ambiguity.","This requirement is somewhat clear regarding the function of creating a ticket retrieval request. However, it could benefit from clearly stating what constitutes 'required information' in the prompt and the exact contents of the ticket retrieval request. The term 'merchant' should also be defined to avoid ambiguity. The final sentence could be further refined to remove compound statements to enhance clarity.","The use of ""create or initiate"" may cause confusion; it should clarify if these actions are synonymous or distinct steps. Additionally, terms like ""all the required information"" should list specific fields or criteria needed. While the latter part defines what a ticket retrieval request is, more detailed steps in the process and clarifications on user prompts would improve clarity and reduce ambiguity. This requirement is somewhat clear regarding the function of creating a ticket retrieval request. However, it could benefit from clearly stating what constitutes 'required information' in the prompt and the exact contents of the ticket retrieval request. The term 'merchant' should also be defined to avoid ambiguity. The final sentence could be further refined to remove compound statements to enhance clarity.","[""\n    Instructions\n    ---\n    Step 1 - The user will hand over a python list of Requirements.\n    Step 2 - The user will hand over Context which describes a specific feature of well-written requirements\n    Step 3 - Analyze the requirement of the python list provided in Step 1 using the Context provided in Step 2. Specifically, the analysis should review the Requirement against the Context and look for opportunities for improvement to align with the Context.\n    \n    Rules\n    ---\n    Return a python list of lists which contains the results of Step 3 for each requirement. Specifically, each list element of the must be a list containing the results from the Step 3 analysis as described in Response Format.\n    \n    Response Format:\n    [\n        [Requirement A, Review of Requirement A using Context],\n        [Requirement B, Review of Requirement B using Context],\n        [Requirement C, Review of Requirement C using Context],\n        [...]\n    ]\n\n    Requirements: \n    ['The Disputes System shall provide view access capability for authorized users of the application.', 'The Disputes System shall provide update access capability for authorized users of the application.', 'The Disputes System must allow the users to select disputable transactions (based on the age of the transaction) from a user interface and initiate a dispute (ticket retrieval request or chargeback notification) on the selected transaction.', 'The Disputes System must provide the user the ability to initiate a single dispute case on multiple transactions that belong to a single merchant.', 'The Disputes System will provide the user the ability to create or initiate a ticket retrieval request.   As part of ticket retrieval creation process the system must prompt the user to enter all the required information to create the ticket retrieval request.  The ticket retrieval request is a document that is sent to merchant inquiring the validity of a transaction.']\n\n    Context:\n    2.4 C3 - Unambiguous \nDefinition: \nNeed statements and requirement statements must be stated such that their intent is clear and \ncan be interpreted in only one way by all the intended audiences. \n \nRationale: \nA need statement and a requirement statement must lend itself to a single interpretation of intent.   \nThese statements are effectively an agreement between two parties communicating intent from \none to the other and forming the basis of verification and validation that the intent was met. An \nagreement is difficult to enact unless both parties are clear on the exact obligation.   \nAs shown in Figure 11, the intent of a need or requirement must be understood, in the same way, \nby all intended audiences across the lifecycle.  \n  \nFigure 11: Needs and Requirements Understood in the Same Way \nAmbiguity leads to interpretations of a need or requirement not intended by the author leading to \nproblems such schedule slips, budget overruns, or a failure of the SOI to pass system validation \nand not be accepted for its intended use; which could result in litigation and financial loss. \nAn ambiguous need or requirement is neither Correct (C8) nor Verifiable/Validatable (C7).   \n \nGuidance: \nWhen writing a need or requirement statement, ask whether it could be interpreted more than one \nway.  It is common for people to interpret words based on their own set of filters, biases, and \nassumptions.  For example, if a person states: I need a cream for wrinkles. - what was the \nintended meaning of the word for  to give, remove, or prevent?   If someone goes to a \nbarber and states: I need my hair shorter  I want it over my ears.  what was the intended \nmeaning of the word over - cover or above? \nOften, people will use common words by themselves without using a modifier that helps the \nreceiver understand the context, and thus the intended meaning of the word used. It is a bad \npractice to assume that the meaning of the words used are understood the same way by all \nintended audiences. \n(Note: Refer to the NRM, Section 2.10, on a more detailed discussion on effective \ncommunications.) \nCustomers\n Users\n Providers Verifiers/\n Validators\n Original figure created by L. Wheatcraft. Usage granted per the INCOSE Copyright Restrictions. All other rights reserved.\nGuide to Writing Requirements  42 \n \n \nINCOSE-TP-2010-006-04| VERS/REV:4  |  1 July 2023   \nFor needs, ask whether the need is Validatable (C7), that is, whether it is stated in such a way \nthat sufficient evidence can be obtained that the need has been met based on the wording of the \nneed statement without having to interpret the stakeholder intent or make assumptions of that \nintent.  \nFor a requirement ask whether the requirement is Verifiable/Validatable (C7), that is, whether it is \nstated in such a way that sufficient evidence can be obtained that the requirement has been met \nbased on the wording of the requirement without having to interpret the intended meaning or \nmake assumptions as to the intended meaning.  \nIt is useful for the stakeholders who are involved in the implementation of the needs and resulting \nrequirements or system verification and system validation to be involved in the definition, review, \nand baseline of the needs and resulting requirements.  When they see needs or requirements \nthat are ambiguous and the stakeholders intent is not clearly communicated, they can identify the \nissue and suggest an alternate, unambiguous wording of the need or requirement statement.   \nAs a minimum, it is recommended that the need or requirement owner(s) along with the \ndevelopment team and those involved in system verification and system validation do a \nwalkthrough of the need set or requirement set to ensure that needs and requirements are \nunderstood as intended, individually and as a set.  As discussed in Section 1.9, this activity is \nreferred to as needs validation or requirement validation. \nBecause a need expression or requirement expression includes both the statement and a set of \nattributes, attributes can be used to help address any ambiguities that may still exist even in the \nmost carefully worded need statement or requirement statement.   \nDue to the limitations of language, it may prove difficult to completely remove all ambiguity.  In \nthis case, the use of the Attribute, A1- Rationale, can be used to include contextual information to \nbetter understand the reason and source of the requirement and may provide additional insight of \nthe intent, helping to reduce ambiguity and provide some increased ability to apply the \nreasonable person test.  Supporting information or commentary on how and why the \nrequirement was formed can be included in the rationale.  By including rationale in each need and \nrequirement expression, readers do not have to assume this informationit is clearly stated for \nall to see and understand in the same way. \nIn addition, Attribute, A39 - Additional Comments, may be used to add additional information \nbeyond what was included in the rationale.  Additional comments can be used to document \npossible issues with the need or design input requirement, any conflicts, status of negotiations, \nactions, design notes, implementation notes, etc.  Further, evaluation and prototyping of the \nsystem concept may have identified important guidelines for the implementation of the need or \nrequirement.  This information may be useful as the need or requirement is being reviewed and \nserves as a place to document information not addressed by other attributes. \nNote that the information contained within the attributes is meant to be informative in a \ncontractual sense (not normative), because of this, the word 'shall' must not be used in any of the \ntext contained in attributes to help ensure the amplifying information is not inadvertently \ninterpreted to be an additional requirement. \nWhen text only makes it difficult to communicate the intent of complex requirement, the inclusion \nof a diagram or trace to a model may help remove the ambiguity.  See R23. \nAmbiguity of individual need and requirement statements can be assessed during early system \nverification and design verification activities discussed in the NRM and GtVV.\n    "", ""\n    Instructions\n    ---\n    Step 1 - The user will hand over a python list of Requirements.\n    Step 2 - The user will hand over Context which describes a specific feature of well-written requirements\n    Step 3 - Analyze the requirement of the python list provided in Step 1 using the Context provided in Step 2. Specifically, the analysis should review the Requirement against the Context and look for opportunities for improvement to align with the Context.\n    \n    Rules\n    ---\n    Return a python list of lists which contains the results of Step 3 for each requirement. Specifically, each list element of the must be a list containing the results from the Step 3 analysis as described in Response Format.\n    \n    Response Format:\n    [\n        [Requirement A, Review of Requirement A using Context],\n        [Requirement B, Review of Requirement B using Context],\n        [Requirement C, Review of Requirement C using Context],\n        [...]\n    ]\n\n    Requirements: \n    ['The Disputes System shall provide view access capability for authorized users of the application.', 'The Disputes System shall provide update access capability for authorized users of the application.', 'The Disputes System must allow the users to select disputable transactions (based on the age of the transaction) from a user interface and initiate a dispute (ticket retrieval request or chargeback notification) on the selected transaction.', 'The Disputes System must provide the user the ability to initiate a single dispute case on multiple transactions that belong to a single merchant.', 'The Disputes System will provide the user the ability to create or initiate a ticket retrieval request.   As part of ticket retrieval creation process the system must prompt the user to enter all the required information to create the ticket retrieval request.  The ticket retrieval request is a document that is sent to merchant inquiring the validity of a transaction.']\n\n    Context:\n    2.4 C3 - Unambiguous \nDefinition: \nNeed statements and requirement statements must be stated such that their intent is clear and \ncan be interpreted in only one way by all the intended audiences. \n \nRationale: \nA need statement and a requirement statement must lend itself to a single interpretation of intent.   \nThese statements are effectively an agreement between two parties communicating intent from \none to the other and forming the basis of verification and validation that the intent was met. An \nagreement is difficult to enact unless both parties are clear on the exact obligation.   \nAs shown in Figure 11, the intent of a need or requirement must be understood, in the same way, \nby all intended audiences across the lifecycle.  \n  \nFigure 11: Needs and Requirements Understood in the Same Way \nAmbiguity leads to interpretations of a need or requirement not intended by the author leading to \nproblems such schedule slips, budget overruns, or a failure of the SOI to pass system validation \nand not be accepted for its intended use; which could result in litigation and financial loss. \nAn ambiguous need or requirement is neither Correct (C8) nor Verifiable/Validatable (C7).   \n \nGuidance: \nWhen writing a need or requirement statement, ask whether it could be interpreted more than one \nway.  It is common for people to interpret words based on their own set of filters, biases, and \nassumptions.  For example, if a person states: I need a cream for wrinkles. - what was the \nintended meaning of the word for  to give, remove, or prevent?   If someone goes to a \nbarber and states: I need my hair shorter  I want it over my ears.  what was the intended \nmeaning of the word over - cover or above? \nOften, people will use common words by themselves without using a modifier that helps the \nreceiver understand the context, and thus the intended meaning of the word used. It is a bad \npractice to assume that the meaning of the words used are understood the same way by all \nintended audiences. \n(Note: Refer to the NRM, Section 2.10, on a more detailed discussion on effective \ncommunications.) \nCustomers\n Users\n Providers Verifiers/\n Validators\n Original figure created by L. Wheatcraft. Usage granted per the INCOSE Copyright Restrictions. All other rights reserved.\nGuide to Writing Requirements  42 \n \n \nINCOSE-TP-2010-006-04| VERS/REV:4  |  1 July 2023   \nFor needs, ask whether the need is Validatable (C7), that is, whether it is stated in such a way \nthat sufficient evidence can be obtained that the need has been met based on the wording of the \nneed statement without having to interpret the stakeholder intent or make assumptions of that \nintent.  \nFor a requirement ask whether the requirement is Verifiable/Validatable (C7), that is, whether it is \nstated in such a way that sufficient evidence can be obtained that the requirement has been met \nbased on the wording of the requirement without having to interpret the intended meaning or \nmake assumptions as to the intended meaning.  \nIt is useful for the stakeholders who are involved in the implementation of the needs and resulting \nrequirements or system verification and system validation to be involved in the definition, review, \nand baseline of the needs and resulting requirements.  When they see needs or requirements \nthat are ambiguous and the stakeholders intent is not clearly communicated, they can identify the \nissue and suggest an alternate, unambiguous wording of the need or requirement statement.   \nAs a minimum, it is recommended that the need or requirement owner(s) along with the \ndevelopment team and those involved in system verification and system validation do a \nwalkthrough of the need set or requirement set to ensure that needs and requirements are \nunderstood as intended, individually and as a set.  As discussed in Section 1.9, this activity is \nreferred to as needs validation or requirement validation. \nBecause a need expression or requirement expression includes both the statement and a set of \nattributes, attributes can be used to help address any ambiguities that may still exist even in the \nmost carefully worded need statement or requirement statement.   \nDue to the limitations of language, it may prove difficult to completely remove all ambiguity.  In \nthis case, the use of the Attribute, A1- Rationale, can be used to include contextual information to \nbetter understand the reason and source of the requirement and may provide additional insight of \nthe intent, helping to reduce ambiguity and provide some increased ability to apply the \nreasonable person test.  Supporting information or commentary on how and why the \nrequirement was formed can be included in the rationale.  By including rationale in each need and \nrequirement expression, readers do not have to assume this informationit is clearly stated for \nall to see and understand in the same way. \nIn addition, Attribute, A39 - Additional Comments, may be used to add additional information \nbeyond what was included in the rationale.  Additional comments can be used to document \npossible issues with the need or design input requirement, any conflicts, status of negotiations, \nactions, design notes, implementation notes, etc.  Further, evaluation and prototyping of the \nsystem concept may have identified important guidelines for the implementation of the need or \nrequirement.  This information may be useful as the need or requirement is being reviewed and \nserves as a place to document information not addressed by other attributes. \nNote that the information contained within the attributes is meant to be informative in a \ncontractual sense (not normative), because of this, the word 'shall' must not be used in any of the \ntext contained in attributes to help ensure the amplifying information is not inadvertently \ninterpreted to be an additional requirement. \nWhen text only makes it difficult to communicate the intent of complex requirement, the inclusion \nof a diagram or trace to a model may help remove the ambiguity.  See R23. \nAmbiguity of individual need and requirement statements can be assessed during early system \nverification and design verification activities discussed in the NRM and GtVV.\n    ""]","['1737264001', '1737264013']",single_attribute_review,"
    This prompt template takes in a list of requirements and an INOCSE description of a particular requirement attribute.
    "
